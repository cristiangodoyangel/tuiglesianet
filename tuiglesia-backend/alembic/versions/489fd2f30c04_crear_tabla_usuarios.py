"""crear tabla usuarios

Revision ID: 489fd2f30c04
Revises: 
Create Date: 2025-06-04 12:10:22.803999

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '489fd2f30c04'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nuevos_miembros')
    op.drop_table('miembros')
    op.drop_table('iglesias')
    op.drop_table('oraciones')
    op.alter_column('usuarios', 'nombre',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('usuarios', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('usuarios', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('usuarios', 'rol',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.drop_constraint(op.f('usuarios_email_key'), 'usuarios', type_='unique')
    op.create_index(op.f('ix_usuarios_email'), 'usuarios', ['email'], unique=True)
    op.drop_constraint(op.f('usuarios_iglesia_id_fkey'), 'usuarios', type_='foreignkey')
    op.drop_column('usuarios', 'creado_en')
    op.drop_column('usuarios', 'iglesia_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usuarios', sa.Column('iglesia_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('usuarios', sa.Column('creado_en', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('usuarios_iglesia_id_fkey'), 'usuarios', 'iglesias', ['iglesia_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_usuarios_email'), table_name='usuarios')
    op.create_unique_constraint(op.f('usuarios_email_key'), 'usuarios', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('usuarios', 'rol',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('usuarios', 'password_hash',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('usuarios', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('usuarios', 'nombre',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.create_table('oraciones',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('iglesia_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('solicitante', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('para_quien', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motivo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('estado', sa.TEXT(), server_default=sa.text("'pendiente'::text"), autoincrement=False, nullable=True),
    sa.Column('fecha', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.CheckConstraint("estado = ANY (ARRAY['pendiente'::text, 'respondida'::text])", name=op.f('oraciones_estado_check')),
    sa.ForeignKeyConstraint(['iglesia_id'], ['iglesias.id'], name=op.f('oraciones_iglesia_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('oraciones_pkey'))
    )
    op.create_table('iglesias',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ciudad', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('creada_en', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('pastor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pastor_id'], ['usuarios.id'], name='fk_pastor', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='iglesias_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('miembros',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('iglesia_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('edad', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telefono', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sector', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ministerio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cargo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bautismo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('discipulado', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('creado_en', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['iglesia_id'], ['iglesias.id'], name=op.f('miembros_iglesia_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('miembros_pkey'))
    )
    op.create_table('nuevos_miembros',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('iglesia_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('edad', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telefono', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('invitado_por', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notas_seguimiento', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fecha_ingreso', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['iglesia_id'], ['iglesias.id'], name=op.f('nuevos_miembros_iglesia_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('nuevos_miembros_pkey'))
    )
    # ### end Alembic commands ###
